@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@config "../tailwind.config.cjs";

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

html {
  margin: 0;
  padding: 0;
  height: 100%;
  overscroll-behavior-y: none;
}

body {
  margin: 0;
  padding: 0;
  color: #444;
  font-family: system-ui, sans-serif;
  height: 100%;
  font-size: 12px;
  overscroll-behavior-y: none;
}

html.dark body {
  background: #252b37;
}

#app {
  height: 100%;
  width: 100%;
}

.editor {
  height: 100%;
}
.editor .cm-editor {
  height: 100%;
}

#syntaxTree {
  height: 20%;
  overflow-y: auto;
}

.center-with-translate {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.center-x-with-translate {
  left: 50%;
  transform: translate(-50%);
}

.no-border-outlineactive,
.no-border-outline:selected,
.no-border-outline:focus,
.no-border-outline:focus-visible {
  border: none;
  outline: none;
}

input {
  @apply border border-gray-300;
  @apply focus:outline-2 focus:outline-gray-400 focus:border focus:border-white;
}

html.dark input {
  @apply bg-gray-900;
  color: rgba(255, 255, 255, 0.9);
  border: 1px solid #5a5a5a;
  &:focus {
    border: 1px solid #3b3b3b;
  }
}

@media (max-width: 600px) {
  input {
    font-size: 16px;
    max-width: 100%;
  }
}

/* note selector, language selector, history selector */
@media (max-width: 600px) {
  .selector {
    max-width: calc(100% - 80px);
  }
}

select {
  @apply dark:bg-gray-800;
}

.kbd {
  @apply font-mono;
  @apply text-nowrap whitespace-nowrap;
  @apply text-xs px-2 py-0.5;
  @apply border-1 border-gray-300 bg-gray-100;
  @apply rounded;
  @apply w-fit;
}

.kbd-btn {
  /* @apply font-mono; */
  @apply text-nowrap whitespace-nowrap;
  @apply text-xs px-1!;
  @apply border-1 border-gray-300;
  @apply bg-gray-100 hover:bg-gray-200;
  @apply cursor-pointer;
  /* @apply h-fit; */
}

.selector {
  /* font-size: 13px; */
  max-height: calc(100% - 4rem);

  @apply text-base;
  @apply bg-white;
  @apply dark:bg-gray-900 dark:text-gray-300;
}

.selector-colors {
  @apply dark:bg-gray-900 dark:text-gray-300;
}

.red {
  @apply text-red-500 dark:text-red-400;
}

.selector-info {
  @apply grid grid-cols-[auto_1fr] gap-x-3 gap-y-0.5 items-center text-xs;
  @apply rounded-lg py-1 px-2 mt-2 max-w-full;
  @apply bg-gray-100 dark:bg-gray-700;
}

/* for getScrollbarWidth() */
.scrollbar-width-detector {
  position: absolute;
  visibility: hidden;
  width: 100px;
  height: 100px;
  overflow: scroll;
}

/* without this the space between checkbox and text is really large
   I have no idea why this helps */
/* .cm-taskmarker-toggle {
  font-family: ui-monospace;
} */

.hili {
  @apply bg-yellow-200 dark:bg-yellow-800 font-semibold;
}

.link {
  @apply cursor-pointer whitespace-nowrap underline underline-offset-2;
}

.button-outline {
  @apply px-4 py-1 rounded-lg border;
  @apply cursor-pointer whitespace-nowrap;

  @apply border-gray-950/20 disabled:border-gray-950/5;
  @apply outline-gray-950/50 disabled:outline-gray-950/5;
  @apply dark:border-gray-400 dark:disabled:border-gray-600;
  @apply dark:outline-gray-400/50 dark:disabled:outline-gray-600;

  @apply hover:bg-gray-100 disabled:hover:bg-transparent;
  @apply dark:hover:bg-gray-600 dark:disabled:hover:bg-gray-900;

  @apply text-gray-700  disabled:text-gray-400;
  @apply dark:text-gray-400 dark:disabled:text-gray-600;
}
